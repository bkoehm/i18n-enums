name: Release
on:
  release:
    types: [ published ]
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GIT_USER_NAME: sbglasius
      GIT_USER_EMAIL: soeren@glasius.dk
    steps:
      -   name: Checkout repository
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
#      -   name: Cache Gradle
#          id: cache-gradle
#          uses: actions/cache@v3
#          with:
#            path: ./gradle/
#            key: ${{ runner.os }}-gradle
#      -   uses: gradle/wrapper-validation-action@v1
      -   name: Set up JDK
          uses: actions/setup-java@v3
          with:
            java-version: '11'
            distribution: 'zulu'
      -   name: Get latest release version number
          id: get_version
          uses: dhkatz/get-version-action@v3
      -   name: Run pre-release
          uses: micronaut-projects/github-actions/pre-release@master
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
      -   name: Publish to Sonatype OSSRH
          id: publish
          uses: gradle/gradle-build-action@v2
          env:
            SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
            SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
            SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
            SIGN_ARMORED_KEY: ${{ secrets.SIGN_ARMORED_KEY }}
            SIGN_PASSWORD: ${{ secrets.SIGNING_PASSPHRASE }}
            RELEASE_VERSION: ${{ steps.get_version.outputs.version-without-v }}
          with:
            arguments: -info -Prelease=true -Pversion="${RELEASE_VERSION}" :i18n-enums:publishToSonatype closeAndReleaseSonatypeStagingRepository
      -   name: Bump patch version by one
          uses: flatherskevin/semver-action@v1
          id: bump_semver
          with:
            current_version: ${{steps.get_version.outputs.version-without-v }}
            level: patch
      -   name: Set version in gradle.properties
          env:
            NEXT_VERSION: ${{ steps.bump_semver.outputs.new_version }}
          run: |
            echo "Preparing next snapshot"
            ./gradlew snapshotVersion -Pversion="${NEXT_VERSION}"
      -   name: Commit & Push changes
          uses: actions-js/push@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            author_name: ${{ secrets.GIT_USER_NAME }}
            author_email: $${ secrets.GIT_USER_EMAIL }}
            message: 'Set project version to next SNAPSHOT'
      -   name: Export Gradle Properties
          uses: micronaut-projects/github-actions/export-gradle-properties@master
      -   name: Run post-release
          if: success()
          uses: micronaut-projects/github-actions/post-release@master
          with:
            token: ${{ secrets.GITHUB_TOKEN }}

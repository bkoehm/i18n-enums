buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
	}
}

group "dk.glasius"

apply plugin: "org.grails.grails-plugin"
apply plugin: "signing"
apply plugin: "maven-publish"

dependencies {
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	compileOnly "io.micronaut:micronaut-inject-groovy"
	console "org.grails:grails-console"
	implementation "org.springframework.boot:spring-boot-starter-logging"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-autoconfigure"
	implementation "org.grails:grails-core"
	profile "org.grails.profiles:plugin"
	testImplementation "io.micronaut:micronaut-inject-groovy"
	testImplementation "org.grails:grails-web-testing-support"
}

bootRun {
	jvmArgs('-Dspring.output.ansi.enabled=always')
	sourceResources sourceSets.main
}

// Enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

//this makes the groovy docs much more readable by shorting packages and providing links
groovydoc {
	excludes = ['**/*GrailsPlugin.groovy','**/Application.groovy' ]
	link('http://download.oracle.com/javase/8/docs/api/', 'java.', 'org.xml', 'javax.', 'org.xml.')
	link("https://docs.spring.io/spring/docs/4.2.x/javadoc-api/", 'org.springframework')
	link('http://groovy.codehaus.org/api/',  'groovy.', 'org.codehaus.groovy.')
	link('https://docs.grails.org/3.3.x/api',  'grails.', 'org.grails.')
	link('https://testing.grails.org/latest/api',  'grails.testing.', 'org.grails.testing.')
	link('http://gorm.grails.org/latest/hibernate/api/',  'grails.gorm', 'grails.orm', 'org.grails.datastore', 'org.grails.orm')
}

publishing {
	publications {
		maven(MavenPublication) {
			artifactId = 'i18n-enums'
			groupId = 'dk.glasius'
			version = project.version

			from components.java

			pom {
				name = 'I18n Enums'
				description = 'Adds an annotation usable on Enums to easy add and implement the MessageSourceResolvable interface in an standard way throughout a grails project.'
				url = 'https://github.com/sbglasius/i18n-enums'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = 'sbglasius'
						name = 'SÃ¸ren Berg Glasius'
						email = "soeren@glasius.dk"
					}
					developer {
						id = 'burt'
						name = 'Burt Beckwith'
						email = "burt@burtbeckwith.com"
					}
					developer {
						id = 'jdaugherty'
						name = 'James Daugherty'
						email = "jdaugherty@jdresources.net"
					}
				}
				scm {
					connection = "scm:git:git://github.com/sbglasius/i18n-enums.git"
					developerConnection = "scm:git:ssh://github.com:sbglasius/i18n-enums.git"
					url = 'https://github.com/sbglasius/i18n-enums/tree/main'
				}
			}

			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
}

afterEvaluate {
	signing {
		ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
		ext["signing.password"] = System.getenv('SIGNING_PASSPHRASE')
		ext["signing.secretKeyRingFile"] = System.getenv('SECRING_FILE')

		logger.lifecycle("Signing: ${signing.secretKeyRingFile}")

		required {
			isReleaseVersion
		}
		sign publishing.publications.maven
	}
}

tasks.withType(Sign).configureEach {
	onlyIf { isReleaseVersion }
}
